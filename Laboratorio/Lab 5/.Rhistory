set.seed(1113)
m = 17
n = 23
k = 15
X = rhyper(120,m,n,k)
# Visualizamos
barplot(table(X))
# media muestral
mean(X)
# media teórica k * p, con p = m/(m+n)
p = m/(m+n)
k * p
# moda
filtro = (table(X) == max(table(X)))
table(X)[filtro]
# mediana
median(X)
# Esperanza g(X) = X^2
g = function(X){X^2}
mean(g(X))
x=as.numeric(names(table(X))) # los valores que toma x
x
px=as.numeric(table(X))/120 # sus probabilidades
px
# Luego, aplicando la materia para v.a. discreta: sumatoria x^2 * px
sum(x^2*px)
# percentiles 10%, 20%,...
# muestrales
quantile(X,1:10/10)
# percentiles teóricos:
qhyper(1:10/10,m,n,k)
# Varianza
# Muestral directa con R
var(X)
# Mediante sumatoria
mediaX = mean(X)
sum((x-mediaX)^2*px)
# ¡No da igual!
# R realiza una correción a la varianza
# Sea largoX el largo del vector X, entonces
# varianza = sumatoria *largoX/(largo-X) debe dar lo mismo que la sumatoria
largoX = length(X)
sum((x-mediaX)^2*px)*largoX/(largoX-1)
var(X)
# Teórica, porque sabemos los verdaderos valores de los parámetros:
k*p*(1 - p) * (m+n-k)/(m+n-1)
# rango
range(X) # no entrega el rango, solo min y max
max(X)-min(X)
# Rango intercuantil
IQR= quantile(X, 0.75) - quantile(X, 0.25)
# desviación estándar
sd(X)
sqrt(var(X))
# Coeficiente de variacion
sd(X)/mean(X)
# Asimetría y curtosis, ejecuten las funciones:
Skewness = function(x){
n = length(x)
sum((x - mean(x))^3/n)/sd(x)^3
}
Kurtosis = function(x){
n = length(x)
sum((x - mean(x))^4/n)/sd(x)^4-3
}
Skewness(X)
Kurtosis(X)
set.seed(1113)
Y = rbinom(120,k,p)
# Visualicemos
barplot(table(Y))
plot(X,Y)
# Covarianza
cov(X,Y)
# camino largo
mediaY=mean(Y)
mean((X-mediaX)*(Y-mediaY))
# corrigiendo
mean((X-mediaX)*(Y-mediaY))*largoX/(largoX-1)
# Correlación
cor(X,Y)
cov(X,Y)/(sd(X)*sd(Y))
# Slide 7
# Primero construiremos la tabla de datos
Sexo=c(rep(0,1+0+4+2+1+1),rep(1,1+3+1+1+3+2))
Edad=c(c(9,rep(11,4),rep(12,2),13,14),
9,rep(10,3),11,12,rep(13,3),rep(14,2))
data=data.frame(Sexo = Sexo, Edad = Edad)
tabla=table(data)
tabla
# 1
?prop.table
# Esta función divide por la suma de los x
Funcion.Prob.Conjunta <-prop.table(tabla)
Funcion.Prob.Conjunta
Funcion.Prob.Conjunta
# 2
# Sumamos las probabilidades
sum(Funcion.Prob.Conjunta[2,c("10","12","14")])
# Otra forma de calcularlo
P.B=mean(data$Edad%%2==0 & data$Sexo ==1)
P.B
# 3
Funcion.Sexo=apply(Funcion.Prob.Conjunta,1,sum)
Funcion.Sexo
# 4
Funcion.Edad=apply(Funcion.Prob.Conjunta,2,sum)
Funcion.Edad
Funcion.Y.dado.X=prop.table(tabla,1)
Funcion.Y.dado.X
# 6
# Podemos probar si P(X=0,Y=10)=P(X=0)P(Y=10)
Funcion.Prob.Conjunta["0","10"]==Funcion.Sexo["0"]*Funcion.Edad["10"]
# No son independientes
# 7)
Costo=function(x,y){
costo=ifelse(x==1,3000+150*y,2500+120*y)
return(costo)
}
