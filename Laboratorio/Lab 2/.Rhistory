main=expression(
paste("Funcion: ",
f(alpha)==100%*%(alpha^3-alpha^2)+15)))
sigma1=1.2
text(0.1,3,bquote(sigma[alpha]==.(sigma1)))
text(0.8,11,expression(sigma[alpha]==0.25))
plot(data$rent ~ data$area,
xlab=expression("Tamaño del departamento "*"[m"^2*"]"),
ylab="Precio de renta []",
main="Precio de renta por tamaño, Munich 1999")
# BOXPLOT RENTA
boxplot(data$rentsqm)
boxplot(data$rentsqm,main="Boxplot de Renta por metro cuadrado")
?boxplot
boxplot(data$rentsqm,main="Boxplot de Renta por metro cuadrado",horizontal=T)
hist(data$rentsqm)
hist(data$rentsqm,main="Histograma de Renta por metro cuadrado",
xlab="Renta por metro cuadrado",
ylab="Frecuencia")
boxplot(data$rent~data$location,
xlab="Localización",
ylab="Renta")
boxplot(data$rent~data$location,
xlab="Localización",
ylab="Renta",horizontal=T)
data$Localización <- ifelse(data$location == 1, "Promedio",
ifelse(data$location == 2,"Bueno",
"Alta"))
boxplot(data$rent~data$Localización,
xlab="Localización",
ylab="Renta")
title("Valor de la renta según la localización")
data$Baño <- ifelse(data$bath == 0, "Estandar","Premium")
barplot(table(data$Baño,data$Localización))
barplot(table(data$Baño,data$Localización),
beside=TRUE,ylim=c(0,2000),
main="Distribución de Baños",
legend=FALSE)
data$Cocina <- ifelse(data$kitchen == 0, "Estandar","Premium")
barplot(table(data$Cocina,data$Localización))
barplot(table(data$Cocina,data$Localización),
beside=TRUE,ylim=c(0,2000),
main="Distribución de Baños",
legend=FALSE)
data$Calefaccion <- ifelse(data$cheating == 0, "No tiene","Tiene")
boxplot(data$rentsqm~data$Calefaccion )
boxplot(data$rentsqm~data$Calefaccion ,
xlab = "Calefacción",
ylab="Renta por metro cuadrado",
main="Renta por metro cuadrado vs. presencia de Calefacción")
?par
par(boxplot)
rm(list=ls())
?exp
?rexp
muestra1=rexp(n=100,rate=tasa)
hist(x=muestra1,freq=FALSE,main="Ejercicio 1",col="pink")
curve(dexp(x,rate=tasa),add=TRUE,lwd=2,lty=2,col="blue")
# Slide 15
# Ejercicios #
# 1
tasa=2
muestra1=rexp(n=100,rate=tasa)
hist(x=muestra1,freq=FALSE,main="Ejercicio 1",col="pink")
curve(dexp(x,rate=tasa),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
# 2
muestra2=rlnorm(100,meanlog=0.5,sdlog=0.02)
hist(x=muestra2,freq=FALSE,main="Ejercicio 2",col="pink")
curve(dlnorm(x,meanlog=0.5,sdlog=0.02),add=TRUE,lwd=2,lty=2,col="blue")
# 3
mu=24
sigma=10.2
# a
# P(X>32)
1-pnorm(q=32,mean=mu,sd=sigma)
pnorm(q=32,mean=mu,sd=sigma,lower.tail=FALSE)
# c
# exito = "Cliente mantiene cuenta por menos de 24 meses"
# P(exito)=P(X<24)
p=pnorm(q=24,mean=mu,sd=sigma)
# Y = cantidad de exitos de un total de n experimentos
# Y ~ Binomial(n=5,p)
n=5
pbinom(q=1,size=n,prob=p)
dbinom(x=0,size=n,prob=p)+dbinom(x=1,size=n,prob=p)
?moments
install.packages(moments)
install.packages("moments")
library(moments)
?moments
??moments
set.seed(1113)
m = 17
n = 23
k = 15
X = rhyper(120,m,n,k)
rm(list=ls())
set.seed(1113)
m = 17
n = 23
k = 15
X = rhyper(120,m,n,k)
# Visualizamos
barplot(table(X))
# Visualizamos
barplot(table(X))
# media muestral
mean(X)
# media teórica k * p, con p = m/(m+n)
p = m/(m+n)
k * p
# moda
filtro = (table(X) == max(table(X)))
table(X)[filtro]
# Esperanza g(X) = X^2
g = function(X){X^2}
mean(g(X))
# media muestral
mean(X)
# media muestral
mean(X)**2
mean(g(X))
x=as.numeric(names(table(X))) # los valores que toma x
x
px=as.numeric(table(X))/120 # sus probabilidades
px
# Luego, aplicando la materia para v.a. discreta: sumatoria x^2 * px
sum(x^2*px)
# percentiles 10%, 20%,...
# muestrales
quantile(X,1:10/10)
# percentiles teóricos:
qhyper(1:10/10,m,n,k)
# Varianza
# Muestral directa con R
var(X)
# Mediante sumatoria
mediaX = mean(X)
sum((x-mediaX)^2*px)
# ¡No da igual!
# R realiza una correción a la varianza
# Sea largoX el largo del vector X, entonces
# varianza = sumatoria *largoX/(largo-X) debe dar lo mismo que la sumatoria
largoX = length(X)
sum((x-mediaX)^2*px)*largoX/(largoX-1)
# Teórica, porque sabemos los verdaderos valores de los parámetros:
k*p*(1 - p) * (m+n-k)/(m+n-1)
# rango
range(X) # no entrega el rango, solo min y max
max(X)-min(X)
# Rango intercuantil
IQR= quantile(X, 0.75) - quantile(X, 0.25)
# desviación estándar
sd(X)
sqrt(var(X))
# Asimetría y curtosis, ejecuten las funciones:
Skewness = function(x){
n = length(x)
sum((x - mean(x))^3/n)/sd(x)^3
}
Kurtosis = function(x){
n = length(x)
sum((x - mean(x))^4/n)/sd(x)^4-3
}
# Asimetría y curtosis, ejecuten las funciones:
Skewness1 = function(x){
n = length(x)
sum((x - mean(x))^3/n)/sd(x)^3
}
Kurtosis1 = function(x){
n = length(x)
sum((x - mean(x))^4/n)/sd(x)^4-3
}
install.packages("moments")
install.packages("moments")
library(moments)
skewness(X)
Skewness1(X)
skewness(X)
Skewness1(X)
kurtosis(X)
Kurtosis1(X)
kurtosis(X)
Kurtosis1(X)
set.seed(1113)
Y = rbinom(120,k,p)
# Visualicemos
barplot(table(Y))
plot(X,Y)
# Covarianza
cov(X,Y)
# camino largo
mediaY=mean(Y)
mean((X-mediaX)*(Y-mediaY))
# corrigiendo
mean((X-mediaX)*(Y-mediaY))*largoX/(largoX-1)
# Correlación
cor(X,Y)
cov(X,Y)/(sd(X)*sd(Y))
# Slide 7
# Primero construiremos la tabla de datos
Sexo=c(rep(0,1+0+4+2+1+1),rep(1,1+3+1+1+3+2))
Edad=c(c(9,rep(11,4),rep(12,2),13,14),
9,rep(10,3),11,12,rep(13,3),rep(14,2))
rm(list=ls())
# Slide 7
# Primero construiremos la tabla de datos
Sexo=c(rep(0,1+0+4+2+1+1),rep(1,1+3+1+1+3+2))
Edad=c(c(9,rep(11,4),rep(12,2),13,14),
9,rep(10,3),11,12,rep(13,3),rep(14,2))
data=data.frame(Sexo = Sexo, Edad = Edad)
View(data)
tabla=table(data)
tabla
# 1
?prop.table
# Esta función divide por la suma de los x
Funcion.Prob.Conjunta <-prop.table(tabla)
Funcion.Prob.Conjunta
# 2
# Sumamos las probabilidades
sum(Funcion.Prob.Conjunta[2,c("10","12","14")])
# 3
Funcion.Sexo=apply(Funcion.Prob.Conjunta,1,sum)
Funcion.Sexo
# 4
Funcion.Edad=apply(Funcion.Prob.Conjunta,2,sum)
Funcion.Edad
?apply
?prop
?prop.table
# 5
Funcion.Y.dado.X=prop.table(tabla,1)
Funcion.Y.dado.X
# 6
# Podemos probar si P(X=0,Y=10)=P(X=0)P(Y=10)
Funcion.Prob.Conjunta["0","10"]==Funcion.Sexo["0"]*Funcion.Edad["10"]
# No son independientes
# 7)
Costo=function(x,y){
costo=ifelse(x==1,3000+150*y,2500+120*y)
return(costo)
}
Costo(data$Sexo,data$Edad)
mean(Costo(data$Sexo,data$Edad))
# Slide 8 #
p=0.6
lambda=15
p.x.y=function(x,y){
p.conjunta=ifelse(x<=y,dbinom(x,y,p)*dpois(y,lambda),0)
return(p.conjunta)
}
x=seq(0,30)
y=seq(0,30)
z=outer(x,y,p.x.y)
X=rep(x,times=length(y))
Y=rep(y,each=length(x))
Z=c(z)
library(scatterplot3d)
scatterplot3d(X,Y,Z,type="h",lwd=2,pch="",
xlab="X",ylab="Y",
zlab=expression(P(X==x,Y==y)),
highlight.3d=TRUE,
angle=45)
# Slide 9 #
alpha=3
beta=3
f.x.y=function(x,y){
densidad=alpha*beta*exp(-alpha*x-beta*y)
return(densidad)
}
x=seq(0.001,3,0.01)
y=seq(0.001,3,0.01)
z=outer(x,y,f.x.y)
library(rgl)
rgl.surface(x=x,y=z,z=y,color="red",back="lines")
install.packages("scatterplot3d")
library(scatterplot3d)
scatterplot3d(X,Y,Z,type="h",lwd=2,pch="",
xlab="X",ylab="Y",
zlab=expression(P(X==x,Y==y)),
highlight.3d=TRUE,
angle=45)
install.packages("rgl")
library(rgl)
rgl.surface(x=x,y=z,z=y,color="red",back="lines")
789-sqrt(522)
-3.201-sqrt(20.131)
766.1527*(-7.687758)*30/29
-6093/(sqrt(522)*sqrt(20.131))
rm(list=ls())
# Slide 25
data=read.table(file.choose(),h=T)
View(data)
X=data$grasas
Y=data$peso
Z=data$edad
# 1
pairs(data,upper.panel=panel.cor)
panel.cor=function(x,y){
par(usr=c(0,1,0,1))
txt=as.character(format(cor(x,y),digits=2))
text(0.5,0.5,txt,cex=6*abs(cor(x,y)))
}
# 1
pairs(data,upper.panel=panel.cor)
# 2
b=sum((Z-mean(Z))*(X-mean(X)))/sum((Z-mean(Z))^2)
a=mean(X)-b*mean(Z)
cbind(a,b)
# 3
par(mfrow=c(1,1))
plot(X~Z,pch=20,bty="n",xlim=c(15,70),
ylim=c(100,500),lwd=5,las = 1,
xlab="Edad",ylab="Grasas")
abline(a=a,b=b,lwd=3,col="red")
# 4
n=length(Z)
S.x.z=sqrt((sum((X-mean(X))^2)-
b^2*sum((Z-mean(Z))^2))/(n-2))
S.x=sqrt(var(X))
cbind(S.x.z,S.x)
r2=1-S.x.z^2/S.x^2
r2
# 5
summary(lm(X ~ Z))
lm(X ~ Z)
pbinom(10,0.3)
pbinom(3,10,0.3)
qgamma(2,2,2)
qgamma(2,2,2)
qgamma(2,2,2)
qgamma(2,shape=2,scale=2)
dgamma(2,shape=2,scale=2)
dgamma(2,2,2)
qnorm(0.2,25,25)
qnorm(0.2,mean=25,sd=25)
senos<-function(x){x*sin(x)/(1+x**2)}
integrate(senos,0,1000)
integrate(senos,-Inf,1000)
integrate(senos,0,1000)
sum((factorial(1:4))**(-1))
sum((factorial(0:4))**(-1))
sum((factorial(0:3))**(-1))
X=matrix(sample(1:28,28),ncol=4)
view(X)
X
var(X[3])
var(X[,3])
var(X[3,])
var(c(12,11,21,19,6,18,14))
set.seed(1709);X=
matrix(sample(1:28,28),ncol=4)
X
var(X[,3])
data <- read.table(file.choose(), h=T, dec=",")
View(data)
median(data$Temperatura_Maxima[Pronostico=="Nublado"], na.rm=TRUE)
median(data$Temperatura_Maxima[data$Pronostico=="Nublado"], na.rm=TRUE)
mean(data$Temperatura_Minima[data$Humedad=="Alta"], na.rm=TRUE)
install.packages(foreign)
install.packages("foreign")
library(foreign)
Munich <- read.dta(file.choose())
View(Munich)
mean(Munich$rent[Munich$cheating==1], trim=0.2)
mean(Munich$rent, trim=0.2)
mean(Munich$rent[Munich$cheating=="1"], trim=0.2)
mean(Munich$rent[Munich$cheating=="1"], trim=0.1)
dataza <- read.table(file.choose(), header=TRUE, dec=",")
Skewness = function(x){
n = length(x)
sum((x - mean(x))^3/n)/sd(x)^3
}
Skewness(dataza$grasas)
Kurtosis = function(x){
n = length(x)
sum((x - mean(x))^4/n)/sd(x)^4-3
}
Kurtosis(dataza$grasas)
IQR(X)=quantile(X,0.75)-quantile(X, 0.25)
IQR <- function(X){quantile(X,0.75)-quantile(X, 0.25)}
IQR(Munich$area)
cor(Munich$rentsqm, Munich$yearc)
lm(Munich$rent ~ Munich$area)
ye <- Munich$rentsqm
equis <- Munich$yearc
lm(ye <- equis)
lm(ye ~ equis)
lm(equis ~ ye)
sd(ye)*sqrt(1 - cor(equis,ye)**2)
ye <- Munich$rentsqm
equis <- Munich$yearc
sd(ye)*sqrt(1 - cor(equis,ye)**2)
set.seed(2001)
talla=round(runif(88,1,9),0)*2+32
color=rbinom(88,1,0.7)
tabla=t(table(talla,color))
tabla
prop.table(tabla)
prop.table(tabla)
prop.table(tabla)
sum(tabla$talla==44)
sum(tabla$talla)
tabla[1,2]
tabla[1]
tabla[2,2]
probs <- prop.table(tabla)
sum(probs[7:9,1])
sum(probs[7:8,1])
sum(probs[7,1])
probs[7,1]
probs[1,7]
sum(probs[1,7:9])
tabla
(3+3+2+3+1+1+2+3)/(3+3+2+3+1+1+2+3+3+2+11+11+8+11+7+11+6)
tallas <- c(6, 5, 13, 14, 9, 11, 8, 13, 9)
prop.table(tallas)
nonegros <- c(3, 3, 2, 3, 1, 0, 1, 2, 3)
prop.table(nonegros)
prop.table(nonegros)[1]
prop.table(tallas)[4]
nonegros <- c(tabla[(2,1:9)])
nonegros <- c(tabla[2,1:9])
nonegros
dim(tabla)
nonegros
prop.table(nonegros)
prop.table(nonegros)[1]
nonegros <- c(tabla[2,1:9])
tabla
nonegros
sum(nonegros)
nonegros <- c(tabla[1,1:9])
prop.table(nonegros)[1]
pbinom(5, n=20, p=25, lower.tail = FALSE)
pbinom(5, size=20, prob=25, lower.tail = FALSE)
pbinom(5, size=20, prob=25, lower.tail = FALSE)
pbinom(5, size=20, prob=0.25, lower.tail = FALSE)
1 - pbinom(6, size=20, prob=0.25)
1 - pbinom(5, size=20, prob=0.25)
1 - pnorm(24, 24, 10.2)
pbinom(1, 5, 0.5)
4/0.5
dpois(0,2)
